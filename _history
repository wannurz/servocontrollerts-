{"entries":[{"timestamp":1739946757266,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":67,"start2":67,"length1":20,"length2":8},{"diffs":[[0,"-start\"></block>"],[1,"\n  "],[0,"<block type=\"dev"]],"start1":64,"start2":64,"length1":32,"length2":35},{"diffs":[[0,"ver\""],[-1," x=\"205\" y=\"0\"></block><block type=\"ibit_Servo\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"169\" y=\"54\"><field name=\"ibitServo\">ibitServo.SV1</field><value name=\"Degree\"><shadow type=\"math_number_minmax\" disabled-reasons=\"MANUALLY_DISABLED\"><mutation min=\"0\" max=\"180\" label=\"Degree\" precision=\"0\"></mutation><field name=\"SLIDER\">59</field></shadow></value"],[0,"></b"]],"start1":107,"start2":107,"length1":375,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"iBIT\": \"github:emwta/pxt-ibit#v4.0.10\""],[0,"\n   "]],"start1":129,"start2":129,"length1":57,"length2":8},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":226,"start2":226,"length1":32,"length2":31}]}]},{"timestamp":1739946901567,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"pe=\""],[-1,"device_forever\" x=\"10\" y=\"10\""],[1,"pxt-on-start\" x=\"0\" y=\"0\"></block><block type=\"device_forever\" x=\"205\" y=\"0\"></block><block type=\"ibit_Servo\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"169\" y=\"54\"><field name=\"ibitServo\">ibitServo.SV1</field><value name=\"Degree\"><shadow type=\"math_number_minmax\" disabled-reasons=\"MANUALLY_DISABLED\"><mutation min=\"0\" max=\"180\" label=\"Degree\" precision=\"0\"></mutation><field name=\"SLIDER\">59</field></shadow></value"],[0,"></b"]],"start1":87,"start2":87,"length1":37,"length2":437}]}]},{"timestamp":1740146539454,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":290,"start2":290,"length1":21,"length2":17}]}]},{"timestamp":1740146539483,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"2"],[1,"1"],[0,"0\" y=\""],[-1,"2"],[1,"1"],[0,"0\"><"]],"start1":106,"start2":106,"length1":16,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":290,"start2":290,"length1":17,"length2":21}]}]},{"timestamp":1740146548587,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"custom.ts\""],[0,"\n   "]],"start1":262,"start2":262,"length1":29,"length2":8}]},{"type":"added","filename":"custom.ts","value":""}]},{"timestamp":1740150443272,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[-1,"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n"]],"start1":0,"start2":0,"length1":830,"length2":0}]}]},{"timestamp":1740150443280,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[-1,"class Cpe {\n    // Enum สำหรับทิศทางของมอเตอร์\n    static MotorDirection = {\n        Forward: \"Forward\" as \"Forward\",\n        Backward: \"Backward\" as \"Backward\"\n    };\n\n    static TurnDirection = {\n        Left: \"Left\" as \"Left\",\n        Right: \"Right\" as \"Right\"\n    };\n\n    static ServoChannel = {\n        SV1: \"SV1\" as \"SV1\",\n        SV2: \"SV2\" as \"SV2\"\n    };\n\n    // ฟังก์ชันควบคุมมอเตอร์เดินหน้าและถอยหลัง\n    static Motor(motor: \"Forward\" | \"Backward\", speed: number): void {\n        let motorspeed = pins.map(speed, 0, 100, 0, 1023);\n        if (motor === Cpe.MotorDirection.Forward) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        } else if (motor === Cpe.MotorDirection.Backward) {\n            pins.digitalWritePin(DigitalPin.P13, 0);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 1);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        }\n    }\n\n    // ฟังก์ชันควบคุมมอเตอร์แยกซ้าย-ขวา\n    static Turn(direction: \"Left\" | \"Right\", speed: number): void {\n        let motorspeed = pins.map(speed, 0, 100, 0, 1023);\n        if (direction === Cpe.TurnDirection.Left) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, 0);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        } else if (direction === Cpe.TurnDirection.Right) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, 0);\n        }\n    }\n\n    // ฟังก์ชันหยุดมอเตอร์\n    static MotorStop(): void {\n        pins.digitalWritePin(DigitalPin.P13, 1);\n        pins.analogWritePin(AnalogPin.P14, 0);\n        pins.digitalWritePin(DigitalPin.P15, 1);\n        pins.analogWritePin(AnalogPin.P16, 0);\n    }\n\n    // ฟังก์ชันควบคุมเซอร์โว\n    static Servo(servo: \"SV1\" | \"SV2\", degree"],[1,"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number)"],[0,": number"],[-1,"): void"],[0," {\n "]],"start1":0,"start2":0,"length1":2203,"length2":755},{"diffs":[[0,"    "],[-1,"if (servo === Cpe.ServoChannel.SV1) {\n            pins.servoWritePin(AnalogPin.P8, degree);\n        } else if (servo === Cpe.ServoChannel.SV2) {\n            pins.servoWritePin(AnalogPin.P12, degree);\n        }"],[1,"return value <= 1 ? value : fib(value -1) + fib(value - 2);"],[0,"\n   "]],"start1":758,"start2":758,"length1":217,"length2":67}]}]},{"timestamp":1740151029620,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":106,"start2":106,"length1":14,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"cpe"],[1,"ii"],[0,"\",\n "]],"start1":11,"start2":11,"length1":11,"length2":10}]}]},{"timestamp":1740151069596,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"servoController.js "],[1,"cpe"],[0,"\",\n "]],"start1":11,"start2":11,"length1":27,"length2":11}]}]},{"timestamp":1740154471723,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[-1,"var Cpe = (fun"],[1,"class Cpe {\n    // Enum สำหรับทิศทางของมอเตอร์\n    static MotorDire"],[0,"ction "],[-1,"()"],[1,"="],[0," {\n    "],[1," "],[-1,"function Cpe() {"],[1,"   Forward: \"Forward\" as \"Forward\",\n        Backward: \"Backward\" as \"Backward\"\n    };\n\n    static TurnDirection = {\n        Left: \"Left\" as \"Left\",\n        Right: \"Right\" as \"Right\"\n    };\n\n    static ServoChannel = {\n        SV1: \"SV1\" as \"SV1\",\n        SV2: \"SV2\" as \"SV2\"\n   "],[0," }"],[1,";"],[0,"\n\n  "]],"start1":0,"start2":0,"length1":51,"length2":367},{"diffs":[[0,"    "],[-1,"Cpe.Motor = function (motor, speed)"],[1,"static Motor(motor: \"Forward\" | \"Backward\", speed: number): void"],[0," {\n "]],"start1":412,"start2":412,"length1":43,"length2":72},{"diffs":[[0," void {\n        "],[-1,"var"],[1,"let"],[0," motorspeed = Ma"]],"start1":475,"start2":475,"length1":35,"length2":35},{"diffs":[[0,"et motorspeed = "],[-1,"Math"],[1,"pins"],[0,".map(speed, 0, 1"]],"start1":492,"start2":492,"length1":36,"length2":36},{"diffs":[[0,"tor === "],[-1,"\""],[1,"Cpe.MotorDirection."],[0,"Forward"],[-1,"\""],[0,") {\n    "]],"start1":556,"start2":556,"length1":25,"length2":42},{"diffs":[[0,"tor === "],[-1,"\""],[1,"Cpe.MotorDirection."],[0,"Backward"],[-1,"\""],[0,") {\n    "]],"start1":841,"start2":841,"length1":26,"length2":43},{"diffs":[[0,"\n        }\n    }"],[-1,";"],[0,"\n\n    // ฟังก์ชั"]],"start1":1105,"start2":1105,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"Cpe.Turn = function (direction, speed)"],[1,"static Turn(direction: \"Left\" | \"Right\", speed: number): void"],[0," {\n "]],"start1":1163,"start2":1163,"length1":46,"length2":69},{"diffs":[[0,"        "],[-1,"var"],[1,"let"],[0," motorsp"]],"start1":1231,"start2":1231,"length1":19,"length2":19},{"diffs":[[0,"speed = "],[-1,"Math"],[1,"pins"],[0,".map(spe"]],"start1":1248,"start2":1248,"length1":20,"length2":20},{"diffs":[[0,"ion === "],[-1,"\""],[1,"Cpe.TurnDirection."],[0,"Left"],[-1,"\""],[0,") {\n    "]],"start1":1308,"start2":1308,"length1":22,"length2":38},{"diffs":[[0,"ion === "],[-1,"\""],[1,"Cpe.TurnDirection."],[0,"Right"],[-1,"\""],[0,") {\n    "]],"start1":1584,"start2":1584,"length1":23,"length2":39},{"diffs":[[0,"     }\n    }"],[-1,";"],[0,"\n\n    // ฟัง"]],"start1":1839,"start2":1839,"length1":25,"length2":24},{"diffs":[[0,"อร์\n    "],[-1,"Cpe."],[1,"static "],[0,"MotorSto"]],"start1":1876,"start2":1876,"length1":20,"length2":23},{"diffs":[[0,"Stop"],[-1," = function ()"],[1,"(): void"],[0," {\n "]],"start1":1896,"start2":1896,"length1":22,"length2":16},{"diffs":[[0,"   }"],[-1,";\n\n    // Enum สำหรับช่วงองศาของเซอร์โว\n    Cpe.ServoRange = {\n        RANGE_0_90: \"0-90\",\n        RANGE_0_180: \"0-180\"\n    };\n\n    // ฟังก์ชันควบคุมเซอร์โว\n    Cpe.Servo = function (servo, degree, range) {\n        var pin;\n        if "],[1,"\n\n    // ฟังก์ชันควบคุมเซอร์โว\n    static Servo"],[0,"(servo"],[-1," ==="],[1,":"],[0," \"SV1\""],[-1,") {\n            pin = AnalogPin.P8;\n        } else if (servo === \"SV2\") {\n            pin = AnalogPin.P12;\n        } else {\n            return; // ถ้าเซอร์โวไม่ถูกต้อง ให้หยุดการทำงาน\n        }\n\n        // จำกัดองศาตามช่วงที่กำหนด\n        var mappedDegree = degree;"],[1," | \"SV2\", degree: number): void {"],[0,"\n   "]],"start1":2104,"start2":2104,"length1":524,"length2":101},{"diffs":[[0,"        if ("],[-1,"range"],[1,"servo"],[0," === Cpe.Ser"]],"start1":2202,"start2":2202,"length1":29,"length2":29},{"diffs":[[0,"ervo"],[-1,"Range.RANGE_0_90) {\n            mappedDegree = Math.max(0, Math.min(90, degree)); // จำกัดช่วง 0-90 องศา"],[1,"Channel.SV1) {\n            pins.servoWritePin(AnalogPin.P8, degree);"],[0,"\n   "]],"start1":2229,"start2":2229,"length1":112,"length2":76},{"diffs":[[0,"if ("],[-1,"range"],[1,"servo"],[0," ==="]],"start1":2317,"start2":2317,"length1":13,"length2":13},{"diffs":[[0,"ervo"],[-1,"Range.RANGE_0_180) {\n            mappedDegree = Math.max(0, Math.min(180, degree)); // จำกัดช่วง 0-180 องศา\n        }\n\n        // ควบคุมเซอร์โว\n        pins.servoWritePin(pin, mappedDegree);\n    };\n\n    return Cpe;\n})();"],[1,"Channel.SV2) {\n            pins.servoWritePin(AnalogPin.P12, degree);\n        }\n    }\n}"],[0,"\n"]],"start1":2336,"start2":2336,"length1":225,"length2":92}]}]},{"timestamp":1740376728702,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[-1,"class Cpe {"],[1,"var Cpe = (function () {\n    function Cpe() { }\n"],[0,"\n   "]],"start1":0,"start2":0,"length1":15,"length2":52},{"diffs":[[0,"    "],[-1,"static Motor(motor: \"Forward\" | \"Backward\", speed: number): void"],[1,"Cpe.Motor = function (motor, speed)"],[0," {\n "]],"start1":96,"start2":96,"length1":72,"length2":43},{"diffs":[[0,"peed) {\n        "],[-1,"const"],[1,"var"],[0," motorspeed = Ma"]],"start1":130,"start2":130,"length1":37,"length2":35},{"diffs":[[0,"\n        }\n    }"],[1,";"],[0,"\n\n    // ฟังก์ชั"]],"start1":726,"start2":726,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"static Turn(direction: \"Left\" | \"Right\", speed: number): void"],[1,"Cpe.Turn = function (direction, speed)"],[0," {\n "]],"start1":785,"start2":785,"length1":69,"length2":46},{"diffs":[[0,"    "],[-1,"const"],[1,"var"],[0," mot"]],"start1":834,"start2":834,"length1":13,"length2":11},{"diffs":[[0,"     }\n    }"],[1,";"],[0,"\n\n    // ฟัง"]],"start1":1406,"start2":1406,"length1":24,"length2":25},{"diffs":[[0,"อร์\n    "],[-1,"static "],[1,"Cpe."],[0,"MotorSto"]],"start1":1444,"start2":1444,"length1":23,"length2":20},{"diffs":[[0,"Stop"],[-1,"(): void"],[1," = function ()"],[0," {\n "]],"start1":1461,"start2":1461,"length1":16,"length2":22},{"diffs":[[0,"6, 0);\n    }"],[1,";"],[0,"\n\n    // Enu"]],"start1":1667,"start2":1667,"length1":24,"length2":25},{"diffs":[[0,"เซอร์โว\n    "],[-1,"static "],[1,"Cpe."],[0,"ServoRange ="]],"start1":1711,"start2":1711,"length1":31,"length2":28},{"diffs":[[0,"    "],[-1,"static Servo(servo: \"SV1\" | \"SV2\", degree: number, range: \"0-90\" | \"0-180\"): void {\n        let pin: AnalogP"],[1,"Cpe.Servo = function (servo, degree, range) {\n        var p"],[0,"in;\n"]],"start1":1836,"start2":1836,"length1":116,"length2":67},{"diffs":[[0,"    "],[-1,"let"],[1,"var"],[0," map"]],"start1":2165,"start2":2165,"length1":11,"length2":11},{"diffs":[[0,"   }"],[-1,"\n}"],[1,";\n\n    return Cpe;\n})();"],[0,"\n"]],"start1":2562,"start2":2562,"length1":7,"length2":29}]}]},{"timestamp":1740376827598,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"troller."],[-1,"t"],[1,"j"],[0,"s \",\n   "]],"start1":23,"start2":23,"length1":17,"length2":17}]}]},{"timestamp":1740377014627,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[-1,"//% weight=100 color=#ff8000 icon=\"\\uf11b\"\n//% block=\"Cpe Controller\"\nnamespace"],[1,"class"],[0," Cpe {\n"],[-1,"\n"],[0,"    //"],[-1,"% blockId=\"cpe_motor\" block=\"motor %motor | speed %speed\"\n    //% speed.min=0 speed.max=100\n    export function"],[1," ฟังก์ชันควบคุมมอเตอร์เดินหน้าและถอยหลัง\n    static"],[0," Mot"]],"start1":0,"start2":0,"length1":208,"length2":73},{"diffs":[[0,"  //"],[-1,"% blockId=\"cpe_turn\" block=\"turn %direction | speed %speed\"\n    //% speed.min=0 speed.max=100\n    export function"],[1," ฟังก์ชันควบคุมมอเตอร์แยกซ้าย-ขวา\n    static"],[0," Tur"]],"start1":740,"start2":740,"length1":121,"length2":52},{"diffs":[[0,"  //"],[-1,"% blockId=\"cpe_motor_stop\" block=\"stop motor\"\n    export function"],[1," ฟังก์ชันหยุดมอเตอร์\n    static"],[0," Mot"]],"start1":1440,"start2":1440,"length1":73,"length2":39},{"diffs":[[0," // "],[-1,"ฟังก์ชันควบคุมเซอร์โว\n    //% blockId=\"cpe_servo\" block=\"set servo %s"],[1,"Enum สำหรับช่วงองศาของเซอร์โว\n    static S"],[0,"ervo"],[-1," | "],[1,"R"],[0,"ang"],[-1,"l"],[0,"e "],[-1,"%degree | range %range\"\n    //% degree.min=0 degree.max="],[1,"= {\n        RANGE_0_90: \"0-90\",\n        RANGE_0_180: \"0-"],[0,"180"],[1,"\""],[0,"\n    "],[-1,"export function"],[1,"};\n\n    // ฟังก์ชันควบคุมเซอร์โว\n    static"],[0," Ser"]],"start1":1698,"start2":1698,"length1":169,"length2":168},{"diffs":[[0,"  } else"],[1," if (servo === \"SV2\")"],[0," {\n     "]],"start1":2037,"start2":2037,"length1":16,"length2":37},{"diffs":[[0,"n.P12;\n        }"],[1," else {\n            return; // ถ้าเซอร์โวไม่ถูกต้อง ให้หยุดการทำงาน\n        }"],[0,"\n\n        // จำก"]],"start1":2095,"start2":2095,"length1":32,"length2":109},{"diffs":[[0,"nge === "],[-1,"\"0-"],[1,"Cpe.ServoRange.RANGE_0_"],[0,"90"],[-1,"\""],[0,") {\n    "]],"start1":2275,"start2":2275,"length1":22,"length2":41},{"diffs":[[0,"nge === "],[-1,"\"0-"],[1,"Cpe.ServoRange.RANGE_0_"],[0,"180"],[-1,"\""],[0,") {\n    "]],"start1":2418,"start2":2418,"length1":23,"length2":42}]}]},{"timestamp":1740377868638,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"0\" y=\"0\"></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":62}]}]},{"timestamp":1740378190858,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":308,"start2":308,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1739946757265,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"ii\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1740154471723,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","custom.ts":"class Cpe {\n    // Enum สำหรับทิศทางของมอเตอร์\n    static MotorDirection = {\n        Forward: \"Forward\" as \"Forward\",\n        Backward: \"Backward\" as \"Backward\"\n    };\n\n    static TurnDirection = {\n        Left: \"Left\" as \"Left\",\n        Right: \"Right\" as \"Right\"\n    };\n\n    static ServoChannel = {\n        SV1: \"SV1\" as \"SV1\",\n        SV2: \"SV2\" as \"SV2\"\n    };\n\n    // ฟังก์ชันควบคุมมอเตอร์เดินหน้าและถอยหลัง\n    static Motor(motor: \"Forward\" | \"Backward\", speed: number): void {\n        let motorspeed = pins.map(speed, 0, 100, 0, 1023);\n        if (motor === Cpe.MotorDirection.Forward) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        } else if (motor === Cpe.MotorDirection.Backward) {\n            pins.digitalWritePin(DigitalPin.P13, 0);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 1);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        }\n    }\n\n    // ฟังก์ชันควบคุมมอเตอร์แยกซ้าย-ขวา\n    static Turn(direction: \"Left\" | \"Right\", speed: number): void {\n        let motorspeed = pins.map(speed, 0, 100, 0, 1023);\n        if (direction === Cpe.TurnDirection.Left) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, 0);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        } else if (direction === Cpe.TurnDirection.Right) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, 0);\n        }\n    }\n\n    // ฟังก์ชันหยุดมอเตอร์\n    static MotorStop(): void {\n        pins.digitalWritePin(DigitalPin.P13, 1);\n        pins.analogWritePin(AnalogPin.P14, 0);\n        pins.digitalWritePin(DigitalPin.P15, 1);\n        pins.analogWritePin(AnalogPin.P16, 0);\n    }\n\n    // ฟังก์ชันควบคุมเซอร์โว\n    static Servo(servo: \"SV1\" | \"SV2\", degree: number): void {\n        if (servo === Cpe.ServoChannel.SV1) {\n            pins.servoWritePin(AnalogPin.P8, degree);\n        } else if (servo === Cpe.ServoChannel.SV2) {\n            pins.servoWritePin(AnalogPin.P12, degree);\n        }\n    }\n}\n","pxt.json":"{\n    \"name\": \"cpe\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"iBIT\": \"github:emwta/pxt-ibit#v4.0.10\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1740376728702,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","custom.ts":"class Cpe {\n    // Enum สำหรับทิศทางของมอเตอร์\n    static MotorDirection = {\n        Forward: \"Forward\" as \"Forward\",\n        Backward: \"Backward\" as \"Backward\"\n    };\n\n    static TurnDirection = {\n        Left: \"Left\" as \"Left\",\n        Right: \"Right\" as \"Right\"\n    };\n\n    static ServoChannel = {\n        SV1: \"SV1\" as \"SV1\",\n        SV2: \"SV2\" as \"SV2\"\n    };\n\n    // ฟังก์ชันควบคุมมอเตอร์เดินหน้าและถอยหลัง\n    static Motor(motor: \"Forward\" | \"Backward\", speed: number): void {\n        let motorspeed = pins.map(speed, 0, 100, 0, 1023);\n        if (motor === Cpe.MotorDirection.Forward) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        } else if (motor === Cpe.MotorDirection.Backward) {\n            pins.digitalWritePin(DigitalPin.P13, 0);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 1);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        }\n    }\n\n    // ฟังก์ชันควบคุมมอเตอร์แยกซ้าย-ขวา\n    static Turn(direction: \"Left\" | \"Right\", speed: number): void {\n        let motorspeed = pins.map(speed, 0, 100, 0, 1023);\n        if (direction === Cpe.TurnDirection.Left) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, 0);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, motorspeed);\n        } else if (direction === Cpe.TurnDirection.Right) {\n            pins.digitalWritePin(DigitalPin.P13, 1);\n            pins.analogWritePin(AnalogPin.P14, motorspeed);\n            pins.digitalWritePin(DigitalPin.P15, 0);\n            pins.analogWritePin(AnalogPin.P16, 0);\n        }\n    }\n\n    // ฟังก์ชันหยุดมอเตอร์\n    static MotorStop(): void {\n        pins.digitalWritePin(DigitalPin.P13, 1);\n        pins.analogWritePin(AnalogPin.P14, 0);\n        pins.digitalWritePin(DigitalPin.P15, 1);\n        pins.analogWritePin(AnalogPin.P16, 0);\n    }\n\n    // ฟังก์ชันควบคุมเซอร์โว\n    static Servo(servo: \"SV1\" | \"SV2\", degree: number): void {\n        if (servo === Cpe.ServoChannel.SV1) {\n            pins.servoWritePin(AnalogPin.P8, degree);\n        } else if (servo === Cpe.ServoChannel.SV2) {\n            pins.servoWritePin(AnalogPin.P12, degree);\n        }\n    }\n}\n","pxt.json":"{\n    \"name\": \"servoController.js \",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"iBIT\": \"github:emwta/pxt-ibit#v4.0.10\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1740378190868}